name: Build
on: [push, pull_request]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build-vite:
    # needs: build-packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: |
            vite/yarn.lock
            tree/yarn.lock
      - name: Install lib tree
        run: cd tree && yarn
      - name: Build lib tree
        run: cd tree && yarn run compile
      - name: Install Vite package
        run: cd vite && yarn
      - name: Build Vite
        run: cd vite && yarn run build
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: vite
          path: vite/dist
          retention-days: 1

  release-macos:
    needs: build-vite
    runs-on: macos-latest
    env:
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      CSC_LINK: ${{ secrets.CSC_LINK }}
      APPLEID: ${{ secrets.APPLEID }}
      APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: 14
      - name: Install Server package
        run: cd server && yarn
      - name: Download built Vite files
        uses: actions/download-artifact@v2
        with:
          name: vite
          path: server/build
      - name: Build app
        run: cd server && yarn release
      # - name: "Upload Artifact"
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: Upload build file
      #     path: server/dist
      #     retention-days: 1

  release-linux-window:
    needs: build-vite
    runs-on: ubuntu-18.04
    container:
      image: electronuserland/builder:wine
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      options: -v "${{ GITHUB_WORKSPACE }}":"/project"
      # volumes:
      #   - ${GITHUB_WORKSPACE}:/project
    steps:
      - name: Build app
        run: cd /project/server && yarn && yarn ./node_modules/.bin/electron-builder -wl
