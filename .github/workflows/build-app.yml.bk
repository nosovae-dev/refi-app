name: Production testing & deployment

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - "vite/**"
      - "tree/**"
      - ".github/**"
  release:
    types: [published]

env:
  TODESKTOP_ACCESS_TOKEN: ${{ secrets.TODESKTOP_ACCESS_TOKEN }}
  TODESKTOP_EMAIL: ${{ secrets.TODESKTOP_EMAIL }}

jobs:
  # build-packages:
  #   name: Build dependencies packages
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "14"
  #         cache: "yarn"
  #     - name: Install lib tree
  #       run: cd tree && yarn
  #     - name: Build lib tree
  #       run: cd tree && yarn run compile

  build-vite:
    # needs: build-packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: |
            vite/yarn.lock
            tree/yarn.lock
      - name: Install lib tree
        run: cd tree && yarn
      - name: Build lib tree
        run: cd tree && yarn run compile
      - name: Install Vite package
        run: cd vite && yarn
      - name: Build Vite
        run: cd vite && yarn run build
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: vite
          path: vite/dist
          retention-days: 1

  build-app:
    needs: build-vite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: "server/yarn.lock"
      - name: Download built Vite files
        uses: actions/download-artifact@v2
        with:
          name: vite
          path: server/build
      - name: Install Server package
        run: cd server && yarn && yarn global add @todesktop/cli
      - name: Send to ToDesktop
        working-directory: ./server
        run: todesktop build
      # - name: Release
      #   run: todesktop release --latest --force
      #   if: $GITHUB_REF_TYPE == 'tag'
